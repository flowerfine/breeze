<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sliew.scaleph.dao.mapper.master.di.DiJobLogMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="DiJobLogMap" type="cn.sliew.scaleph.dao.entity.master.di.DiJobLog">
        <result column="id" property="id"/>
        <result column="creator" property="creator"/>
        <result column="create_time" property="createTime"/>
        <result column="editor" property="editor"/>
        <result column="update_time" property="updateTime"/>
        <result column="project_id" property="projectId"/>
        <result column="job_id" property="jobId"/>
        <result column="job_code" property="jobCode"/>
        <result column="cluster_id" property="clusterId"/>
        <result column="job_instance_id" property="jobInstanceId"/>
        <result column="job_log_url" property="jobLogUrl"/>
        <result column="start_time" property="startTime"/>
        <result column="end_time" property="endTime"/>
        <result column="duration" property="duration"/>
        <result column="job_instance_state" property="jobInstanceState"/>
        <association property="project" javaType="cn.sliew.scaleph.dao.entity.master.di.DiProject">
            <result column="project_id" property="id"/>
            <result column="project_code" property="projectCode"/>
            <result column="project_name" property="projectName"/>
        </association>
        <association property="cluster" javaType="cn.sliew.scaleph.dao.entity.master.di.DiClusterConfig">
            <result column="cluster_id" property="id"/>
            <result column="cluster_name" property="clusterName"/>
            <result column="cluster_type" property="clusterType"/>
        </association>
    </resultMap>

    <resultMap id="groupCountMap" type="java.util.HashMap">
        <result column="name" property="name" javaType="java.lang.String"/>
        <result column="value" property="value" javaType="java.lang.Integer"/>
    </resultMap>

    <select id="selectPage" resultMap="DiJobLogMap">
        <![CDATA[
        select
            t1.id,
            t1.job_id,
            t1.job_code,
            t1.job_instance_id,
            t1.job_log_url,
            t1.start_time,
            t1.end_time,
            t1.duration,
            t1.job_instance_state,
            t1.project_id,
            t4.project_code,
            t4.project_name,
            t1.cluster_id,
            t3.cluster_name,
            t3.cluster_type,
            t1.creator,
            t1.create_time,
            t1.editor,
            t1.update_time
        from di_job_log t1
        inner join (select distinct project_id,job_code from di_job where job_type = #{jobType,jdbcType=VARCHAR} ) t2
        on t1.project_id = t2.project_id
        and t1.job_code = t2.job_code
        left join di_cluster_config t3
        on t1.cluster_id = t3.id
        left join di_project t4
        on t1.project_id = t4.id
        ]]>
        <where>
            <if test="log != null and log.projectId != null ">
                and t1.project_id = #{log.projectId,jdbcType=BIGINT}
            </if>
            <if test="log != null and log.clusterId != null ">
                and t1.cluster_id = #{log.clusterId,jdbcType=BIGINT}
            </if>
            <if test="log != null and log.jobCode != null and log.jobCode != '' ">
                and t1.job_code like concat('%',#{log.jobCode,jdbcType=VARCHAR},'%')
            </if>
            <if test="log != null and log.jobInstanceState != null and log.jobInstanceState != '' ">
                and t1.job_instance_state = #{log.jobInstanceState,jdbcType=VARCHAR}
            </if>
            <if test="log != null and log.jobInstanceId != null and log.jobInstanceId != '' ">
                and t1.job_instance_id = #{log.jobInstanceId,jdbcType=VARCHAR}
            </if>
            <if test="log != null and log.startTime !=null and log.endTime != null">
                and
                (
                t1.start_time between #{log.startTime,jdbcType=TIMESTAMP} and #{log.endTime,jdbcType=TIMESTAMP}
                or
                t1.end_time between #{log.startTime,jdbcType=TIMESTAMP} and #{log.endTime,jdbcType=TIMESTAMP}
                )
            </if>
            <if test="log != null and log.startTime != null and log.endTime == null">
                and t1.start_time &gt;= #{log.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="log != null and log.endTime != null and log.startTime == null ">
                and t1.end_time &lt;= #{log.endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>

    <select id="selectTopN" resultMap="DiJobLogMap">
        <![CDATA[
        select
            t1.id,
            t1.job_id,
            t1.job_code,
            t1.job_instance_id,
            t1.job_log_url,
            t1.start_time,
            t1.end_time,
            t1.duration,
            t1.job_instance_state,
            t1.project_id,
            t4.project_code,
            t4.project_name
        from di_job_log t1
        inner join (select distinct project_id,job_code from di_job where job_type = #{jobType,jdbcType=VARCHAR} ) t2
        on t1.project_id = t2.project_id
        and t1.job_code = t2.job_code
        left join di_project t4
        on t1.project_id = t4.id
        ]]>
        <where>
            <if test="startTime != null ">
                and t1.start_time &gt;= #{startTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by t1.duration desc
        limit ${n}
    </select>

    <select id="selectRealtimeJobRuntimeStatus" resultMap="groupCountMap">
        select
        count(1) as value,
        coalesce(a1.dict_value,t.runtime_state) as name
        from di_job t
        left join (select dict_code,dict_value from sys_dict where dict_type_code = 'runtime_state') a1
        on t.runtime_state = a1.dict_code
        where t.job_type = #{jobType,jdbcType=VARCHAR}
        group by t.runtime_state
    </select>

</mapper>
